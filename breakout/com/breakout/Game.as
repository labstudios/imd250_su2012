package com.breakout{	import flash.display.Sprite;	import flash.events.Event;	import com.Master;	public class Game extends Sprite	{		public static const TOP_WALL:Number = 0;		public static const BOTTOM_WALL:Number = 400;		public static const LEFT_WALL:Number = 0;		public static const RIGHT_WALL:Number = 400;		public static const STARTX:Number = 275;		public static const STARTY:Number = 250;		private static var game:Game; //static variable for singleton				private var _ball:Ball;		private var _paddle:Paddle;		private var _bricks:Vector.<Brick> = new Vector.<Brick>();				public function Game():void		{			game = this; //store the instance into the static variable			this._ball = new Ball(); //creates the ball			this._ball.x = STARTX;			this._ball.y = STARTY;						this._paddle = new Paddle();			this._paddle.x = 275;			this._paddle.y = 350;						this.addChild(this._paddle);			this.addChild(this._ball); //makes the ball show up						this.addEventListener(Event.ENTER_FRAME, this.run);			this.addEventListener(Event.ADDED_TO_STAGE, this.init);			this.addEventListener(Event.REMOVED_FROM_STAGE, this.destroy);		}				private function init(e:* = null):void		{			this.level = 1;			this.lives = 3;			this.score = 0;			this.buildLevel();		}				private function run(e:* = null):void		{			this._paddle.run();			this._ball.run();		}				private function buildLevel():void		{			var currentRow:int = 0;			var currentColumn:int = 0;			var numRows:int = this.level;						this._ball.x = STARTX;			this._ball.y = STARTY;						for(var i:int = 0; i < numRows; ++i)			{				for(var j:int = 0; j < Brick.PER_ROW;++j)				{					var brick:Brick = new Brick();					brick.x = Brick.LEFT_START + (Brick.X_PADDING * j);					brick.y = Brick.TOP_START + (Brick.Y_PADDING * i);					this.bricks.push(brick);					this.addChild(brick);				}			}		}				public function nextLevel():void		{			this.level++;			buildLevel();		}				public function die():void		{			this.lives--;			if(this.lives <= 0)			{				(this.parent as Master).gotoEnd();			}			this._ball.x = STARTX;			this._ball.y = STARTY;		}				private function destroy(e:* = null):void		{			this.removeEventListener(Event.ENTER_FRAME, this.run);			this.removeEventListener(Event.ADDED_TO_STAGE, this.init);			this.removeEventListener(Event.REMOVED_FROM_STAGE, this.destroy);			game = null;		}				//static getter for the instance		public static function get instance():Game		{			return game;		}				public function get paddle():Paddle		{			return this._paddle;		}				public function get ball():Ball		{			return this._ball;		}				public function get bricks():Vector.<Brick>		{			return this._bricks;		}				public function get level():int		{			return int(this._level.text);		}				public function set level(n:int):void		{			this._level.text = n.toString();		}				public function get score():int		{			return int(this._score.text);		}				public function set score(n:int):void		{			this._score.text = n.toString();		}				public function get lives():int		{			return int(this._lives.text);		}				public function set lives(n:int):void		{			this._lives.text = n.toString();		}	}}